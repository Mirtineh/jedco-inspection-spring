{"version":3,"sources":["services/userManagementService.js","views/users/Users.js"],"names":["loadRoles","token","rootUrl","getRootUrl","um_url","config","headers","Authorization","concat","axios","get","then","response","data","loadActions","loadRoleActions","id","createRole","insertDto","method","url","updateRole","updateDto","name","description","updateDefinedActions","deleteRole","loadUsers","createUsers","checkUserActivation","actNo","completeRegistration","deleteUser","suspendUser","reactivateUser","getBadge","status","Transition","React","forwardRef","props","ref","_jsx","Slide","direction","Users","modal","setModal","useState","alterAction","setAlterAction","dialogConfirm","setDialogConfirm","userTobeAltered","setUserTobeAltered","columns","setColumns","toggle","setFirstName","setLastName","setEmail","setPhoneNumber","setUserRoleId","setEmailSelected","setSmsSelected","store","useStore","useEffect","fields","push","key","_style","width","label","sorter","filter","login","roles","includes","confirmDialog","user","action","handleUserDelete","NotificationManager","success","message","load_users","toggleDetails","error","catch","err","console","log","handleUserSuspend","handleUserReactivate","countries","setCountries","userRoles","setUserRoles","firstName","lastName","email","phoneNumber","userRoleId","username","setUsername","password","setPassword","smsSelected","emalSelected","details","setDetails","index","position","indexOf","newDetails","slice","splice","_jsxs","_Fragment","children","CModal","show","onClose","size","backdrop","closeOnBackdrop","CModalHeader","closeButton","CRow","CCol","xs","md","CCard","CCardBody","onSubmit","event","preventDefault","notTypes","CFormGroup","row","CLabel","htmlFor","CInput","onInput","e","target","value","placeholder","required","type","autoComplete","CSelect","custom","onChange","map","item","i","tag","sm","className","variant","inline","CInputCheckbox","disabled","checked","onClick","CCardFooter","CCardHeader","CDataTable","items","tableFilter","itemsPerPageSelect","itemsPerPage","hover","striped","bordered","outlined","pagination","scopedSlots","CBadge","color","statusId","statusName","userRoleName","userName","show_details","CButton","shape","update","delete","CCollapse","style","marginRight","marginBottom","Date","parseFloat","createdOn","toLocaleString","marginLeft","activationNo","paddingLeft","paddingRight","Dialog","open","TransitionComponent","keepMounted","DialogTitle","DialogContent","DialogContentText","textAlign","userId","length"],"mappings":"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","file":"static/js/12.98469de9.chunk.js","sourcesContent":["import { getRootUrl } from './rootUrl';\nimport axios from 'axios';\n\nexport const loadRoles = (token) => {\n  const rootUrl = getRootUrl().um_url;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return axios.get(\n    rootUrl + \"/UserRole/userRoleList\",\n    config).then(response => response.data)\n}\n\nexport const loadActions = (token) => {\n  const rootUrl = getRootUrl().um_url;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return axios.get(\n    rootUrl + \"/UserAction/userActionList\",\n    config).then(response => response.data)\n}\n\nexport const loadRoleActions = (token, id) => {\n  const rootUrl = getRootUrl().um_url;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return axios.get(\n    rootUrl + \"/roleDefinition/definedRolesList?userRoleId=\" + id,\n    config).then(response => response.data)\n}\n\nexport function createRole(token, insertDto) {\n  const rootUrl = getRootUrl().um_url;\n  return axios({\n    method: 'post',\n    url: rootUrl + \"/roleDefinition/defineRole\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: insertDto\n  }).then(response => response.data)\n}\n\nexport function updateRole(token, updateDto) {\n  const rootUrl = getRootUrl().um_url;\n  return axios({\n    method: 'put',\n    url: rootUrl + \"/UserRole/updateUserRole\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: {\n      \"id\": updateDto.id,\n      \"name\": updateDto.name,\n      \"description\": updateDto.description\n    }\n  }).then(response => response.data)\n}\n\nexport function updateDefinedActions(token, updateDto) {\n  const rootUrl = getRootUrl().um_url;\n  return axios({\n    method: 'put',\n    url: rootUrl + \"/roleDefinition/updateDefinedActions\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: updateDto\n  }).then(response => response.data)\n}\n\nexport function deleteRole(token, id) {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'delete',\n    url: rootUrl + \"/roleDefinition/deleteUserRole?UserRoleID=\" + id,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => response.data)\n}\nexport const loadUsers = (token) => {\n  const rootUrl = getRootUrl().um_url;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return axios.get(\n    rootUrl + \"/User/userList\",\n    config).then(response => response.data)\n}\n\nexport const loadUsersByRole = (token, id) => {\n  const rootUrl = getRootUrl().um_url;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return axios.get(\n    rootUrl + \"/User/userListByRole?roleId=\"+id,\n    config).then(response => response.data)\n}\n\nexport const createUsers = (token, insertDto) => {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'post',\n    url: rootUrl + \"/User/createUser\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: insertDto\n  }).then(response => response.data)\n}\n\n\nexport const checkUserActivation = (actNo) => {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios.get(\n    rootUrl + \"/User/activationNumCheck?activationNO=\"+actNo).then(response => response.data)\n}\n\nexport const completeRegistration = (insertDto) => {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'post',\n    url: rootUrl + \"/User/setUserNameAndPassword\",\n    data: insertDto\n  }).then(response => response.data)\n}\n\n\nexport function deleteUser(token, id) {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'delete',\n    url: rootUrl + \"/User/deleteUser?userId=\" + id,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => response.data)\n}\n\nexport function suspendUser(token, id) {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'put',\n    url: rootUrl + \"/User/suspendUser?userId=\" + id,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => response.data)\n}\n\nexport function reactivateUser(token, id) {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'put',\n    url: rootUrl + \"/User/reactivateUser?userId=\" + id,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => response.data)\n}\n","import React, {lazy, useEffect, useState} from 'react'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CCollapse,\n  CDataTable,\n  CFormGroup,\n  CInput,\n  CInputCheckbox,\n  CLabel,\n  CModal,\n  CModalHeader,\n  CRow,\n  CSelect,\n} from '@coreui/react'\nimport {NotificationManager} from 'react-notifications';\nimport {useStore} from '../../MobxStore'\nimport {createUsers, deleteUser, loadRoles, loadUsers, reactivateUser, suspendUser} from '../../services/userManagementService';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\n\nconst getBadge = status => {\n  switch (status) {\n    case 1:\n      return 'success';\n    case 'Inactive':\n      return 'secondary';\n    case 2:\n      return 'warning';\n    case 4:\n      return 'danger';\n    case 5:\n      return 'danger';\n    default:\n      return 'primary'\n  }\n};\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'));\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nconst Users = () => {\n\n\n  const [modal, setModal] = useState(false);\n\n\n  const [alterAction, setAlterAction] = useState('');\n  const [dialogConfirm, setDialogConfirm] = React.useState(false);\n  const [userTobeAltered, setUserTobeAltered] = useState({});\n  const [columns, setColumns]= useState([]);\n\n\n  const toggle = () => {\n\n    setModal(!modal);\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setPhoneNumber(\"\");\n    setUserRoleId(\"\");\n    setEmailSelected(true);\n    setSmsSelected(false);\n  };\n\n\n\n\n  const store = useStore();\n\n  useEffect(() => {\n    const fields = [];\n    fields.push(\"firstName\",\n      \"lastName\",\n      {key: 'email', _style: {width: '20%'}},\n      \"phone\",\n      {\n        key: 'userName',\n        label: 'userName',\n        sorter: false,\n        filter: false\n      },\n      \"role\",\n      'status',\n      {\n        key: 'show_details',\n        label: 'Details',\n        _style: {width: '1%'},\n        sorter: false,\n        filter: false\n      });\n    if(store.login.roles.includes(\"VIEW_AND_MAINTAIN_USER_MANAGEMENT\")){\n      fields.push({\n          key: 'update',\n          label: 'Update',\n          sorter: false,\n          filter: false,\n        },\n        {\n          key: 'delete',\n          label: 'Delete',\n          sorter: false,\n          filter: false\n        })\n    }\n    setColumns(fields);\n  }, []);\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    console.log(\"handle Submit here\");\n    const notTypes = [];\n    if (emalSelected) {\n      notTypes.push(\"email\");\n    }\n    if (smsSelected) {\n      notTypes.push(\"sms\")\n    }\n\n    const insertDto = {\n      \"userRoleId\": userRoleId,\n      \"firstName\": firstName,\n      \"lastName\": lastName,\n      \"email\": email,\n      \"phone\": phoneNumber,\n      \"username\": username,\n      \"password\": password\n    };\n\n    console.log(insertDto);\n    createUsers(store.login.token, insertDto).then(response => {\n      if (response.status) {\n        NotificationManager.success(response.message, 'Success', 3000);\n        load_users();\n        toggle();\n\n      } else {\n        NotificationManager.error(response.message, 'Failed!', 3000);\n      }\n    })\n      .catch(err => {\n        console.log(err);\n        if (err.response.status == 403) {\n          NotificationManager.error(\"You are not allowed to perform this task\", 'Failed!', 3000);\n        } else {\n          NotificationManager.error(\"Unable to try User Create, check your connection\", 'Failed!', 3000);\n        }\n      });\n\n  };\n\n  const confirmDialog = (user, action) => {\n    setDialogConfirm(true);\n    setUserTobeAltered(user);\n    setAlterAction(action);\n  };\n\n  const handleAction = (id) => {\n\n    if (alterAction.length > 0) {\n      if (alterAction == \"Delete\") {\n        handleUserDelete(id);\n      } else if (alterAction == \"Suspend\") {\n        handleUserSuspend(id);\n      } else if (alterAction == \"Reactivate\") {\n        handleUserReactivate(id);\n      }\n\n    }\n  };\n\n  const handleUserDelete = (id) => {\n\n    deleteUser(store.login.token, id).then(response => {\n      if (response.status) {\n        NotificationManager.success(response.message, 'Success', 3000);\n        load_users();\n        setDialogConfirm(false);\n        toggleDetails([]);\n        // toggle();\n\n      } else {\n        NotificationManager.error(response.message, 'Failed!', 3000);\n      }\n    })\n      .catch(err => {\n        console.log(err);\n        if (err.response.status == 403) {\n          NotificationManager.error(\"You are not allowed to perform this task\", 'Failed!', 3000);\n        } else {\n          NotificationManager.error(\"Unable to try User Delete, check your connection\", 'Failed!', 3000);\n        }\n      });\n\n  };\n\n  const handleUserSuspend = (id) => {\n\n    suspendUser(store.login.token, id).then(response => {\n      if (response.status) {\n        NotificationManager.success(response.message, 'Success', 3000);\n        load_users();\n        setDialogConfirm(false);\n        toggleDetails([]);\n\n      } else {\n        NotificationManager.error(response.message, 'Failed!', 3000);\n      }\n    })\n      .catch(err => {\n        console.log(err);\n        if (err.response.status == 403) {\n          NotificationManager.error(\"You are not allowed to perform this task\", 'Failed!', 3000);\n        } else {\n          NotificationManager.error(\"Unable to try User Suspend, check your connection\", 'Failed!', 3000);\n        }\n      });\n\n  };\n\n  const handleUserReactivate = (id) => {\n\n    reactivateUser(store.login.token, id).then(response => {\n      if (response.status) {\n        NotificationManager.success(response.message, 'Success', 3000);\n        load_users();\n        setDialogConfirm(false);\n        toggleDetails([]);\n\n      } else {\n        NotificationManager.error(response.message, 'Failed!', 3000);\n      }\n    })\n      .catch(err => {\n        console.log(err);\n        if (err.response.status == 403) {\n          NotificationManager.error(\"You are not allowed to perform this task\", 'Failed!', 3000);\n        } else {\n          NotificationManager.error(\"Unable to try User Suspend, check your connection\", 'Failed!', 3000);\n        }\n      });\n\n  };\n\n\n  const [countries, setCountries] = useState([]);\n  const [userRoles, setUserRoles] = useState([]);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [userRoleId, setUserRoleId] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [smsSelected, setSmsSelected] = useState(false);\n  const [emalSelected, setEmailSelected] = useState(true);\n\n\n  const load_users = () => {\n    loadUsers(store.login.token).then(response => {\n\n      setCountries(response);\n      console.log(response);\n\n    })\n      .catch(err => console.log(err));\n  };\n\n\n\n  useEffect(() => {\n    load_users()\n  }, []);\n\n  useEffect(() => {\n    loadRoles(store.login.token).then(response => {\n      setUserRoles(response);\n      console.log(response);\n    }).catch(err => console.log(err));\n  }, []);\n\n\n  const [details, setDetails] = useState([]);\n  // const [items, setItems] = useState(usersData)\n\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index);\n    let newDetails = details.slice();\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n    setDetails(newDetails)\n  };\n\n  return (\n    <>\n      <CModal\n        show={modal}\n        onClose={toggle}\n        size='lg'\n        backdrop\n        closeOnBackdrop={false}\n      >\n        <CModalHeader size=\"modal-lg\" closeButton><h4>Add User</h4></CModalHeader>\n\n        <CRow>\n          <CCol xs=\"12\" md=\"12\">\n            <CCard>\n              <CCardBody>\n                <form onSubmit={handleSubmit}>\n\n                  <CFormGroup row>\n                    <CCol md=\"2\">\n                      <CLabel htmlFor=\"text-input\">First Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"4\">\n                      <CInput id=\"text-input\" name=\"text-input\" onInput={e => setFirstName(e.target.value)}\n                              value={firstName} placeholder=\"Enter First Name\" required/>\n                      {/* <CFormText>This is a help text</CFormText> */}\n                    </CCol>\n                    <CCol md=\"2\">\n                      <CLabel htmlFor=\"text-input\">Last Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"4\">\n                      <CInput id=\"text-input\" name=\"text-input\" onInput={e => setLastName(e.target.value)}\n                              value={lastName} placeholder=\"Enter Last Name\" required/>\n                      {/* <CFormText>This is a help text</CFormText> */}\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CCol md=\"2\">\n                      <CLabel htmlFor=\"email-input\">Phone Number</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"4\">\n                      <CInput id=\"email-input\" name=\"email-input\" onInput={e => setPhoneNumber(e.target.value)}\n                              value={phoneNumber} placeholder=\"Enter Phone Number\" required/>\n                      {/* <CFormText className=\"help-block\">Please enter your email</CFormText> */}\n                    </CCol>\n                    <CCol md=\"2\">\n                      <CLabel htmlFor=\"email-input\">Email</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"4\">\n                      <CInput type=\"email\" id=\"email-input\" name=\"email-input\" onInput={e => setEmail(e.target.value)}\n                              value={email} placeholder=\"Enter Email\" autoComplete=\"email\" required/>\n                      {/* <CFormText className=\"help-block\">Please enter your email</CFormText> */}\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CCol md=\"2\">\n                      <CLabel htmlFor=\"email-input\">Username</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"4\">\n                      <CInput id=\"username-input\" name=\"username-input\" onInput={e => setUsername(e.target.value)}\n                              value={username} placeholder=\"Enter Username\" required/>\n                      {/* <CFormText className=\"help-block\">Please enter your email</CFormText> */}\n                    </CCol>\n                    <CCol md=\"2\">\n                      <CLabel htmlFor=\"email-input\">Password</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"4\">\n                      <CInput id=\"password-input\" name=\"password-input\" onInput={e => setPassword(e.target.value)}\n                              value={password} placeholder=\"Enter Password\" required/>\n                      {/* <CFormText className=\"help-block\">Please enter your email</CFormText> */}\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CCol md=\"2\">\n                      <CLabel htmlFor=\"selectLg\">Select Role</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"4\" size=\"lg\">\n                      <CSelect custom name=\"selectLg\" id=\"selectLg\"\n                               value={userRoleId}\n                               onChange={e => {\n                                 setUserRoleId(e.target.value)\n                               }}>\n                        <option key={-1} value={0}>--Select User Role--</option>\n                        {userRoles.map((item, i) => {\n                          return (\n                            <option key={i} value={item.id}>{item.name}</option>\n                          )\n                        }, this)}\n                      </CSelect>\n                    </CCol>\n\n                    <CCol tag=\"label\" sm=\"2\" md=\"2\" className=\"col-form-label\">\n                      Notification\n                    </CCol>\n                    <CCol sm=\"4\">\n                      <CFormGroup variant=\"custom-checkbox\" inline>\n                        <CInputCheckbox\n                          custom\n                          id=\"inline-checkbox1\"\n                          name=\"inline-checkbox1\"\n                          value=\"sms\"\n                          disabled\n                          checked={smsSelected}\n                          onClick={(e) => {\n                            setSmsSelected(e.target.checked);\n                            console.log(\"Sms selected\" + e.target.checked)\n                          }}\n                        />\n                        <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox1\">SMS</CLabel>\n\n                        <CFormGroup variant=\"custom-checkbox\" inline/>\n\n                      </CFormGroup>\n                      <CFormGroup variant=\"custom-checkbox\" inline>\n                        <CInputCheckbox\n                          custom id=\"inline-checkbox2\"\n                          name=\"inline-checkbox2\"\n                          value=\"email\"\n                          checked={emalSelected}\n                          onClick={(e) => {\n                            setEmailSelected(e.target.checked);\n                            console.log(\"Email selected\" + e.target.checked)\n                          }}/>\n                        <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox2\">Email</CLabel>\n                      </CFormGroup>\n                    </CCol>\n                  </CFormGroup>\n                  <CCardFooter/>\n                  <div className=\"d-flex justify-content-between\">\n                    <button type=\"button\" className=\"btn btn-outline-danger m-2 btn-md\" onClick={toggle}>Cancel</button>\n\n                    <button type=\"submit\" className=\"btn btn-outline-success m-2 btn-md\">Submit</button>\n                  </div>\n                </form>\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol xs=\"12\" md=\"6\">\n          </CCol>\n        </CRow>\n\n\n      </CModal>\n\n\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n\n              <div className=\"d-flex justify-content-between\">\n                <h4>Users</h4>\n                <div className=\"d-flex justify-content-end\">\n                  {store.login.roles.includes(\"CREATE_USER\")?\n                  <button type=\"button\" className=\"btn btn-outline-success m-2 btn-md\" onClick={toggle}>Add User\n                  </button>\n                    :\"\"}\n                </div>\n              </div>\n            </CCardHeader>\n            <CCardBody>\n\n              <CDataTable\n                items={countries}\n                fields={columns}\n                tableFilter\n                itemsPerPageSelect\n                itemsPerPage={5}\n                hover\n                size=\"sm\"\n                striped\n                bordered\n                outlined\n                pagination\n                scopedSlots={{\n                  'status':\n                    (item) => (\n                      <td>\n                        <CBadge color={getBadge(item.statusId)}>\n                          {item.statusName}\n                        </CBadge>\n                      </td>\n                    ),\n                  'role':\n                    (item) => (\n                      <td>\n                        {item.userRoleName}\n                      </td>\n                    ),\n                  'userName':\n                    (item) => (\n                      <td>\n                        {item.userName == null ? <strong>Not Set</strong> : item.userName}\n                      </td>\n                    ),\n\n                  'show_details':\n                    (item, index) => {\n                      return (\n                        <td className=\"py-2\">\n                          <CButton\n                            color=\"primary\"\n                            variant=\"outline\"\n                            shape=\"square\"\n                            size=\"sm\"\n                            onClick={() => {\n                              toggleDetails(index)\n                            }}\n                          >\n                            {details.includes(index) ? 'Hide' : 'Show'}\n                          </CButton>\n                        </td>\n                      )\n                    },\n\n                  'update':\n                    (item, index) => {\n                      return (\n                        <div>{store.login.roles.includes(\"VIEW_AND_MAINTAIN_USER_MANAGEMENT\")?\n                          <td className=\"py-2\">\n\n                              <CButton\n                                color=\"warning\"\n                                variant=\"outline\"\n                                shape=\"square\"\n                                size=\"sm\"\n                                onClick={() => {\n                                }}\n                              >\n                                Update\n                              </CButton>\n                          </td>:\"\"}\n                        </div>\n\n                      )\n                    },\n                  'delete':\n                    (item, index) => {\n                      return (\n                        <td className=\"py-2\">\n                          {store.login.roles.includes(\"VIEW_AND_MAINTAIN_USER_MANAGEMENT\")?\n                          <CButton\n                            color=\"danger\"\n                            variant=\"outline\"\n                            shape=\"square\"\n                            size=\"sm\"\n                            onClick={\n\n                              () => confirmDialog(item, \"Delete\")\n                            }\n                          >\n                            Delete\n                          </CButton>:\"\"}\n                        </td>\n                      )\n                    },\n                  'details':\n                    (item, index) => {\n                      return (\n                        <CCollapse show={details.includes(index)}>\n                          <CCardBody>\n                            <div className=\"d-flex justify-content-start\">\n\n                              <div style={{marginRight: 20, width: \"40%\"}}><h4 style={{marginBottom: 4}}>\n                                <strong>{item.firstName + \" \" + item.lastName}</strong></h4>\n                                <p>\n\n                                  <p className=\"text-muted\">Registered\n                                    On: {new Date(parseFloat(item.createdOn)).toLocaleString()}</p>\n\n                                </p>\n                              </div>\n                              {item.statusId == 2 ?\n                                <div style={{marginRight: 20, width: \"60%\"}}><h6 style={{marginBottom: 4}}><strong>User\n                                  Activation</strong></h6><p>\n                                  User has not been activated yet.\n                                  <CButton\n                                    variant=\"outline\"\n                                    color=\"warning\"\n                                    shape=\"square\"\n                                    size=\"sm\"\n                                    style={{marginLeft: 10, marginRight: 10}}\n                                  >\n                                    Resend Activation number\n                                  </CButton>\n                                </p>\n                                  <div style={{marginRight: 20, width: \"60%\"}}><h6 style={{marginBottom: 4}}><strong>Activation Number</strong></h6><p>\n                                    {item.activationNo}\n                                  </p></div>\n                                </div>\n\n\n                                : item.statusId == 1 ?\n                                  <div style={{marginRight: 20, width: \"60%\"}}><h6 style={{marginBottom: 4}}><strong>User\n                                    Activation</strong></h6><p>\n                                    User account Activated.\n\n                                    {store.login.roles.includes(\"VIEW_AND_MAINTAIN_USER_MANAGEMENT\")?\n                                    <CButton\n                                      variant=\"outline\"\n                                      color=\"danger\"\n                                      shape=\"square\"\n                                      size=\"sm\"\n                                      style={{marginLeft: 10, marginRight: 10, paddingLeft: 10, paddingRight: 10}}\n                                      onClick={\n\n                                        () => confirmDialog(item, \"Suspend\")\n                                      }\n                                    > Suspend User</CButton>:\"\"}\n\n                                  </p></div> : item.statusId == 4 ?\n                                    <div style={{marginRight: 20, width: \"60%\"}}><h6 style={{marginBottom: 4}}><strong>User\n                                      Activation</strong></h6><p>\n                                      User account Suspended.\n\n                                      {store.login.roles.includes(\"VIEW_AND_MAINTAIN_USER_MANAGEMENT\")?\n                                        <CButton\n                                          variant=\"outline\"\n                                          color=\"success\"\n                                          shape=\"square\"\n                                          size=\"sm\"\n                                          style={{marginLeft: 10, marginRight: 10}}\n                                          onClick={\n\n                                            () => confirmDialog(item, \"Reactivate\")\n                                          }\n                                        > Reactivate User</CButton>:\"\"}\n\n                                    </p></div> : \"\"}\n\n                            </div>\n\n                          </CCardBody>\n                        </CCollapse>\n                      )\n                    }\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n      </CRow>\n      <div>\n        <Dialog\n          open={dialogConfirm}\n          TransitionComponent={Transition}\n          keepMounted\n          aria-labelledby=\"alert-dialog-slide-title\"\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <DialogTitle id=\"alert-dialog-slide-title\">{<h5>Are You sure?</h5>}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-slide-description\">\n              {<div><h5 style={{textAlign: 'center'}}><small>You are about\n                to {alterAction} User <strong>{userTobeAltered.firstName + \" \" + userTobeAltered.lastName + \" \"}</strong> -\n                Role <strong>{userTobeAltered.userRoleName}</strong></small></h5><h6 style={{textAlign: 'center'}}> Are\n                You sure you want to proceed?</h6></div>}\n            </DialogContentText>\n          </DialogContent>\n          <div className=\"d-flex justify-content-between\">\n            <button type=\"button\" className=\"btn btn-outline-danger m-2 btn-sm\" onClick={() => {\n              setDialogConfirm(false)\n            }}>Cancel\n            </button>\n\n            <button className=\"btn btn-outline-success m-2 btn-sm\" type=\"submit\" onClick={(e) => {\n              handleAction(userTobeAltered.userId)\n            }}>Continue\n            </button>\n\n          </div>\n        </Dialog>\n      </div>\n\n    </>\n  )\n};\n\nexport default Users\n\n"],"sourceRoot":""}