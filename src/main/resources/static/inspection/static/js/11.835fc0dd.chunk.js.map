{"version":3,"sources":["services/userManagementService.js","views/users/Roles.js"],"names":["loadRoles","token","rootUrl","getRootUrl","um_url","config","headers","Authorization","concat","axios","get","then","response","data","loadActions","loadRoleActions","id","createRole","insertDto","method","url","updateRole","updateDto","name","description","updateDefinedActions","deleteRole","loadUsers","createUsers","checkUserActivation","actNo","completeRegistration","deleteUser","suspendUser","reactivateUser","Transition","React","forwardRef","props","ref","_jsx","Slide","direction","fields","key","_classes","sorter","filter","label","Roles","open","setOpen","useState","roleList","setRoles","modal","setModal","header","setHeader","displayName","setDisplayName","setName","deleteName","setDeleteName","setDescription","actions","setActions","roleActionList","setRoleActionList","accordion","setAccordion","store","useStore","initialize","login","console","log","catch","err","useEffect","toggle","_jsxs","_Fragment","children","ToastContainer","CModal","show","onClose","size","backdrop","closeOnBackdrop","CModalHeader","closeButton","CModalBody","onSubmit","event","preventDefault","roleUpdateDto","status","NotificationManager","success","message","error","class","TextField","onInput","e","target","value","variant","required","multiline","rows","type","className","map","action","index","CCard","CCardHeader","CButton","block","color","groupName","CCollapse","CCardBody","CListGroup","actionsDtos","act","enabled","includes","userActionId","CListGroupItem","CSwitch","labelOn","labelOff","checked","onChange","selected","Promise","resolve","reject","indexOf","splice","push","handletoggle","onClick","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","roleInsertDto","CModalFooter","CRow","CCol","xl","style","marginBottom","CDataTable","items","hover","tableFilter","striped","itemsPerPage","itemsPerPageSelect","clickableRows","scopedSlots","item","Date","parseFloat","createdOn","toLocaleString","role_details","shape","updates","disabled","role_actions","userActionList","forEach","entry","load_roleActions","deletes","confirmDelete","Dialog","TransitionComponent","keepMounted","DialogTitle","DialogContent","DialogContentText","textAlign","handleRoleDelete"],"mappings":"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","file":"static/js/11.835fc0dd.chunk.js","sourcesContent":["import { getRootUrl } from './rootUrl';\nimport axios from 'axios';\n\nexport const loadRoles = (token) => {\n  const rootUrl = getRootUrl().um_url;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return axios.get(\n    rootUrl + \"/UserRole/userRoleList\",\n    config).then(response => response.data)\n}\n\nexport const loadActions = (token) => {\n  const rootUrl = getRootUrl().um_url;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return axios.get(\n    rootUrl + \"/UserAction/userActionList\",\n    config).then(response => response.data)\n}\n\nexport const loadRoleActions = (token, id) => {\n  const rootUrl = getRootUrl().um_url;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return axios.get(\n    rootUrl + \"/roleDefinition/definedRolesList?userRoleId=\" + id,\n    config).then(response => response.data)\n}\n\nexport function createRole(token, insertDto) {\n  const rootUrl = getRootUrl().um_url;\n  return axios({\n    method: 'post',\n    url: rootUrl + \"/roleDefinition/defineRole\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: insertDto\n  }).then(response => response.data)\n}\n\nexport function updateRole(token, updateDto) {\n  const rootUrl = getRootUrl().um_url;\n  return axios({\n    method: 'put',\n    url: rootUrl + \"/UserRole/updateUserRole\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: {\n      \"id\": updateDto.id,\n      \"name\": updateDto.name,\n      \"description\": updateDto.description\n    }\n  }).then(response => response.data)\n}\n\nexport function updateDefinedActions(token, updateDto) {\n  const rootUrl = getRootUrl().um_url;\n  return axios({\n    method: 'put',\n    url: rootUrl + \"/roleDefinition/updateDefinedActions\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: updateDto\n  }).then(response => response.data)\n}\n\nexport function deleteRole(token, id) {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'delete',\n    url: rootUrl + \"/roleDefinition/deleteUserRole?UserRoleID=\" + id,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => response.data)\n}\nexport const loadUsers = (token) => {\n  const rootUrl = getRootUrl().um_url;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return axios.get(\n    rootUrl + \"/User/userList\",\n    config).then(response => response.data)\n}\n\nexport const loadUsersByRole = (token, id) => {\n  const rootUrl = getRootUrl().um_url;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return axios.get(\n    rootUrl + \"/User/userListByRole?roleId=\"+id,\n    config).then(response => response.data)\n}\n\nexport const createUsers = (token, insertDto) => {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'post',\n    url: rootUrl + \"/User/createUser\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: insertDto\n  }).then(response => response.data)\n}\n\n\nexport const checkUserActivation = (actNo) => {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios.get(\n    rootUrl + \"/User/activationNumCheck?activationNO=\"+actNo).then(response => response.data)\n}\n\nexport const completeRegistration = (insertDto) => {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'post',\n    url: rootUrl + \"/User/setUserNameAndPassword\",\n    data: insertDto\n  }).then(response => response.data)\n}\n\n\nexport function deleteUser(token, id) {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'delete',\n    url: rootUrl + \"/User/deleteUser?userId=\" + id,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => response.data)\n}\n\nexport function suspendUser(token, id) {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'put',\n    url: rootUrl + \"/User/suspendUser?userId=\" + id,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => response.data)\n}\n\nexport function reactivateUser(token, id) {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'put',\n    url: rootUrl + \"/User/reactivateUser?userId=\" + id,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => response.data)\n}\n","import React, {useEffect, useState} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CCollapse,\n  CDataTable,\n  CListGroup,\n  CListGroupItem,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CRow,\n  CSwitch\n} from '@coreui/react'\nimport {toast, ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport TextField from '@material-ui/core/TextField';\nimport {\n  createRole,\n  deleteRole,\n  loadActions,\n  loadRoleActions,\n  loadRoles,\n  updateDefinedActions,\n  updateRole\n} from '../../services/userManagementService'\nimport {useStore} from '../../MobxStore'\n\nimport {NotificationManager} from 'react-notifications';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst fields = [\n  {key: 'name', _classes: 'font-weight-bold'},\n  {\n    key: 'description',\n    sorter: false,\n    filter: false\n  }, 'createdOn', {\n    key: 'role_details',\n    label: 'Details',\n    sorter: false,\n    filter: false\n  }, {\n    key: 'updates',\n    label: '',\n    sorter: false,\n    filter: false\n  },\n  {\n    key: 'deletes',\n    label: '',\n    sorter: false,\n    filter: false\n  }\n];\n\n\nconst Roles = () => {\n\n  const [open, setOpen] = React.useState(false);\n  const [roleList, setRoles] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [header, setHeader] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [deleteName, setDeleteName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [actions, setActions] = useState([]);\n  const [roleActionList, setRoleActionList] = useState([]);\n  const [accordion, setAccordion] = useState(0);\n  const store = useStore();\n\n\n  const initialize = () => {\n    loadRoles(store.login.token).then(response => {\n      setRoles(response);\n      console.log(response);\n    }).catch(err => console.log(err));\n\n    loadActions(store.login.token).then(response => {\n      setActions(response);\n      // console.log(\" actions \"+JSON.stringify(response));\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n\n    initialize();\n\n  }, []);\n\n\n  const load_roleActions = (item) => {\n    let role_actions = [];\n    new Promise((resolve, reject) => {\n      loadRoleActions(store.login.token, item.id).then(response => {\n\n        response[0].userActionList.forEach(function (entry) {\n          role_actions.push(entry.id);\n          console.log(entry.id);\n\n        });\n        resolve()\n      }).catch(err => console.log(err));\n    }).then(() => {\n      console.log(\" pushed \" + role_actions);\n      setRoleActionList(role_actions);\n      toggle(item.id, item.name, item.description);\n\n      console.log(\"role actions - - -\" + role_actions);\n    });\n\n\n    //\n  };\n\n\n  const toggle = (header, name, description) => {\n    setModal(!modal);\n    setHeader(header);\n    setName(name);\n    setDisplayName(name);\n    setDescription(description);\n\n    if (header == \"\") {\n      setRoleActionList([])\n    }\n  };\n\n  const handletoggle = (id) => {\n    let selected = roleActionList;\n    new Promise((resolve, reject) => {\n      const index = selected.indexOf(id);\n      if (index > -1) {\n        selected.splice(index, 1);\n      } else {\n        selected.push(id)\n      }\n      resolve()\n    }).then(() => {\n      console.log(\"zzzzzzzzzzzzzzzzzzzz \" + selected);\n      setRoleActionList(selected);\n\n    });\n\n    setRoleActionList([id]);\n\n  };\n\n  const handleRoleSubmit = (event) => {\n    event.preventDefault();\n\n    const roleUpdateDto = {\n      \"id\": header,\n      \"name\": name,\n      \"description\": description\n    };\n\n    updateRole(store.login.token, roleUpdateDto).then(response => {\n      if (response.status) {\n        NotificationManager.success(response.message, 'Success', 3000);\n        initialize();\n        setDisplayName(name);\n        // toggle(\"\",\"\",\"\");\n\n      } else {\n        NotificationManager.error(response.message, 'Update Failed!', 3000);\n      }\n    })\n      .catch(err => {\n        console.log(err);\n        if (err.response.status == 403) {\n          NotificationManager.error(\"You are not allowed to perform this task\", 'Update Failed!', 3000);\n        } else {\n          NotificationManager.error(\"Unable to try Role Update, check your connection\", 'Update Failed!', 3000);\n        }\n      });\n\n  };\n\n  const handleActionSubmit = (event) => {\n    event.preventDefault();\n\n    const roleUpdateDto = {\n      \"userRoleId\": header,\n      \"userActions\": roleActionList,\n    };\n\n    updateDefinedActions(store.login.token, roleUpdateDto).then(response => {\n      if (response.status) {\n        NotificationManager.success(response.message, 'Success', 3000);\n        initialize();\n\n      } else {\n        NotificationManager.error(response.message, 'Update Failed!', 3000);\n      }\n    })\n      .catch(err => {\n        console.log(err);\n        if (err.response.status == 403) {\n          NotificationManager.error(\"You are not allowed to perform this task\", 'Update Failed!', 3000);\n        } else {\n          NotificationManager.error(\"Unable to try Update, check your connection\", 'Update Failed!', 3000);\n        }\n      });\n\n  };\n\n\n  const handleRoleCreate = (event) => {\n    event.preventDefault();\n\n    if (name == \"\") {\n\n      toast.error('Role Name Can not be empty!', {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } else {\n      const roleInsertDto = {\n        \"userRoleName\": name,\n        \"userRoleDescription\": description,\n        \"userActions\": roleActionList,\n      };\n\n      createRole(store.login.token, roleInsertDto).then(response => {\n        if (response.status) {\n          NotificationManager.success(response.message, 'Success', 3000);\n          initialize();\n          toggle(\"\", \"\", \"\");\n\n        } else {\n          NotificationManager.error(response.message, 'Update Failed!', 3000);\n        }\n      })\n        .catch(err => {\n          console.log(err);\n          if (err.response.status == 403) {\n            NotificationManager.error(\"You are not allowed to perform this task\", 'Update Failed!', 3000);\n          } else {\n            NotificationManager.error(\"Unable to try Update, check your connection\", 'Update Failed!', 3000);\n          }\n        });\n\n    }\n\n  };\n\n  const confirmDelete = (item) => {\n    setOpen(true);\n    setDeleteName(item);\n  };\n\n  const handleRoleDelete = (event, id) => {\n    event.preventDefault();\n\n    deleteRole(store.login.token, id).then(response => {\n      if (response.status) {\n        NotificationManager.success(response.message, 'Success', 3000);\n        initialize();\n        setOpen(false);\n      } else {\n        NotificationManager.error(response.message, 'Delete Failed!', 3000);\n      }\n    })\n      .catch(err => {\n        console.log(err);\n        if (err.response.status == 403) {\n          NotificationManager.error(\"You are not allowed to perform this task\", 'Delete Failed!', 3000);\n        } else {\n          NotificationManager.error(\"Unable to try Delete, check your connection\", 'Delete Failed!', 3000);\n        }\n      });\n\n\n  };\n\n\n  return (\n    <>\n      <ToastContainer/>\n\n      <CModal\n        show={modal}\n        onClose={() => {\n          toggle(\"\", \"\", \"\")\n        }}\n        size='lg'\n        backdrop\n        closeOnBackdrop={false}\n      >\n        <CModalHeader size=\"modal-lg\" closeButton><h4>\n          <small>{header == 0 ? \"Create User Role\" : \"Update User Role\"}</small> - {header == 0 ? name : displayName}\n        </h4></CModalHeader>\n        <CModalBody>\n\n          <form onSubmit={handleRoleSubmit}>\n            <div class=\"form-row\">\n              <div class=\"col-md-5 mb-3\">\n                {/* <label for=\"validationDefault01\">First name</label> */}\n                <TextField id=\"outlined-basic\" label=\"Name\" onInput={e => setName(e.target.value)} value={name}\n                           size=\"small\" variant=\"outlined\" required/>\n              </div>\n              <div class=\"col-md-5 mb-3\">\n                {/* <label for=\"validationDefault02\">Last name</label> */}\n                <TextField id=\"outlined-basic\" label=\"Description\" multiline rows={3}\n                           onInput={e => setDescription(e.target.value)} value={description} size=\"small\"\n                           variant=\"outlined\"/>\n              </div>\n              <div class=\"col-md-2 mb-3\">\n                {header == 0 ? \"\" :\n                  <button type=\"submit\" className=\"btn btn-outline-success m-2 btn-md\">Update</button>}\n\n              </div>\n            </div>\n          </form>\n          <hr/>\n          <CModalHeader size=\"modal-lg\"><h4>\n            <small>{header == 0 ? \"Assign Actions for \" : \"Update Role Actions for \"}</small> - {header == 0 ? name : displayName}\n          </h4></CModalHeader>\n\n\n          {actions.map((action, index) => {\n            return (\n              <>\n\n                <div id=\"accordion\">\n                  <CCard className=\"mb-0\">\n                    <CCardHeader id=\"headingOne\">\n                      <CButton\n                        block\n                        color=\"link\"\n                        className=\"text-left\"\n                        // onClick={() => setAccordion(accordion === index ? null : index)}\n                      >\n                        <h5 className=\"m-0 p-0\">{action.groupName}</h5>\n                      </CButton>\n                    </CCardHeader>\n                    {/* <CCollapse show={accordion === index}> */}\n                    <CCollapse show={accordion === 0}>\n                      <CCardBody>\n                        <CCard>\n\n\n                          <CListGroup>\n                            {\n                              action.actionsDtos.map((act) => {\n\n                                let enabled = false;\n                                if (roleActionList.includes(act.userActionId)) {\n                                  enabled = true\n                                }\n\n                                return (\n                                  <>\n                                    <CListGroupItem>\n                                      <div className=\"d-flex justify-content-between\">\n                                        {act.action}\n                                        <CSwitch className={'mx-1'} color={'success'}\n                                                 labelOn={'\\u2713'}\n                                                 labelOff={'\\u2715'}\n                                                 checked={enabled}\n                                                 onChange={\n                                                   // (e)=>console.log(e.target.checked)\n                                                   () => {\n                                                     handletoggle(act.userActionId);\n                                                   }\n                                                   // ()=>{\n                                                   //   setRoleActionList([1,2]);}\n                                                 }\n\n                                        />\n                                      </div>\n\n                                    </CListGroupItem>\n                                  </>\n                                );\n                              })}\n\n                          </CListGroup>\n\n                        </CCard>\n\n                      </CCardBody>\n                    </CCollapse>\n                  </CCard></div>\n\n\n              </>\n            )\n          })}\n\n        </CModalBody>\n        {/* <CModalFooter /> */}\n        <div className=\"d-flex justify-content-between\">\n          {header == 0 ?\n            <button type=\"button\" className=\"btn btn-outline-danger m-2 btn-md\" onClick={() => {\n              toggle(\"\", \"\", \"\")\n            }}>Cancel</button>\n            : <button type=\"button\" className=\"btn btn-outline-danger m-2 btn-md\" onClick={() => {\n              toggle(\"\", \"\", \"\")\n            }}>Close</button>}\n          {header == 0 ?\n            <button className=\"btn btn-outline-success m-2 btn-md\" type=\"submit\"\n                    onClick={handleRoleCreate}>Submit</button> :\n            <button className=\"btn btn-outline-success m-2 btn-md\" onClick={handleActionSubmit}>Update</button>}\n\n\n        </div>\n        <CModalFooter/>\n      </CModal>\n\n      <CRow>\n        <CCol xl={12}>\n          <CCard>\n            <CCardHeader>\n              <div className=\"d-flex justify-content-between\">\n                <div><h4 style={{marginBottom: 2}}>Roles</h4>\n                  <small className=\"text-muted\"> user roles</small>\n                </div>\n                <div className=\"d-flex justify-content-end\">\n                  <button type=\"button\" className=\"btn btn-outline-success m-2 btn-md\" onClick={() => {\n                    toggle(0, \"\", \"\")\n                  }}>Add Role\n                  </button>\n                </div>\n              </div>\n            </CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={roleList}\n                fields={fields}\n                hover\n                tableFilter\n                striped\n                itemsPerPage={5}\n                itemsPerPageSelect\n                clickableRows\n                // onRowClick={(item) => history.push(`/users/${item.id}`)}\n                scopedSlots={{\n                  'createdOn':\n                    (item) => (\n                      <td>\n\n                        {\n                          // new Date(item.createdOn).toLocaleDateString(\"en-US\")\n                          new Date(parseFloat(item.createdOn)).toLocaleString()\n                        }\n\n                      </td>\n                    ),\n                  'role_details':\n                    (item, index) => {\n                      return (\n                        <td className=\"py-2\">\n                          <CButton\n                            color=\"primary\"\n                            variant=\"outline\"\n                            shape=\"square\"\n                            size=\"sm\"\n                            // onClick={()=>{toggleDetails(index)}}\n                          >\n                            Detail\n                          </CButton>\n                        </td>\n                      )\n                    },\n\n                  'updates':\n                    (item, index) => {\n                      return (\n                        <td className=\"py-2\">\n                          <CButton\n                            color=\"warning\"\n                            variant=\"outline\"\n                            shape=\"square\"\n                            size=\"sm\"\n                            disabled={item.name == \"Admin\"}\n                            onClick={() => {\n\n                              load_roleActions(item)\n                            }}\n                          >\n                            Update\n                          </CButton>\n                        </td>\n                      )\n                    },\n                  'deletes':\n                    (item, index) => {\n                      return (\n                        <td className=\"py-2\">\n                          <CButton\n                            color=\"danger\"\n                            variant=\"outline\"\n                            shape=\"square\"\n                            disabled={item.name == \"Admin\"}\n                            size=\"sm\"\n                            onClick={\n                              // (e)=>{handleRoleDelete(e,item.id)}\n                              () => confirmDelete(item)\n                            }\n                          >\n                            Delete\n                          </CButton>\n                        </td>\n                      )\n                    },\n                }}\n              />\n              {/* <CPagination\n              activePage={page}\n              onActivePageChange={pageChange}\n              pages={5}\n              doubleArrows={false}\n              align=\"center\"\n            /> */}\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      <div>\n\n        <Dialog\n          open={open}\n          TransitionComponent={Transition}\n          keepMounted\n          aria-labelledby=\"alert-dialog-slide-title\"\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <DialogTitle id=\"alert-dialog-slide-title\">{<h5>Are You sure?</h5>}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-slide-description\">\n              {<div><h5 style={{textAlign: 'center'}}><small>You are about to delete\n                role <strong>{deleteName.name}</strong></small></h5><h6 style={{textAlign: 'center'}}> Are You sure you\n                want to proceed?</h6></div>}\n            </DialogContentText>\n          </DialogContent>\n          <div className=\"d-flex justify-content-between\">\n            <button type=\"button\" className=\"btn btn-outline-danger m-2 btn-sm\" onClick={() => {\n              setOpen(false)\n            }}>Cancel\n            </button>\n\n            <button className=\"btn btn-outline-success m-2 btn-sm\" type=\"submit\" onClick={(e) => {\n              handleRoleDelete(e, deleteName.id)\n            }}>Continue\n            </button>\n\n\n          </div>\n        </Dialog>\n      </div>\n    </>\n  )\n};\n\nexport default Roles\n"],"sourceRoot":""}